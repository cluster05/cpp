TREE : 

TREE is collection of nodes where one of the node taken as ROOT node
rest of nodes devided into collection of disjoint subset. and each subset 
is node or tree.

            A
        /   |   \
       B    D    C
    /    \      /  \
   E      F    G    H

 
Terminology  :
ROOT        : A
Parent      : A < B,D,C
Child       : 
Siblings    : B,C,D ( Children of same Parent)
Decendence  : A > All node  ( Node can be reach from perticular node )
Ancesters   : All Node from that node to root node 
Degree      : Number of Children
Internal Node : Degree > 0  
External Node : Degree == 0 leaf Node
Leavel      : 1 , 2 , 3
Height      : 0 , 1 , 2
Forest      : when we remove root node remaing tree called Forest

Binary TREE: Evary Node two or less than two node;

Left Sckewed Binary Tree ( only left child )
Right Sckewed Binary Tree ( only right child )

---------------------------------------------------------------------

Number of Binary Tree for n nodes :

Cathalon Number : T (n) = (2n) C n  /  n + 1 


    N       0   1   2   3   4   5   6

    T(n)    1   1   2   5   14  42  132


    T(n) = T(1) * T (n -1 ) + ... +  T(n -1 ) * T (1) 

      SUM[1-n]  T ( i - 1 ) T ( n - i )


FOR label Node : 

    T (n) = ((2n) C n  /  n + 1)  * n !

Number of tree with maximum Height : 2^n


-------------------------------------------------------------------------

Number of Maximum / Minimum nodes for Binary Tree in given height :

if H = h

Maximum Nodes =  h + 1 

Minimum Nodes = ( 2 ^ (h+1) )  - 1 


[INVERSE]

WHAT nodes are given what is maximum and Minimum height of tree can be : 

Maximum height = n - 1

Minimum height = log2(n+1) - 1


-----------------------------------------------------------------------------


STICT Binary Tree  : Children { 0 , 2 }

Minimum Number of node required to build height in STICT Binary tree

Min Node  = 2h + 1
Max Node = (2 ^ (h+1)) -1 


Internal Nodes  + 1  = External Nodes 


-------------------------------------------------------------------------

M - ary tree { 0 ,1,2,3..M} Children

Strick M -ary tree { 0 , M} Children

Min Nodes = m * h + 1

Max Nodes =  ( m ^ (h+1) )+ 1  /  m -1 

-------------------------------------------------------------------------


Array Representation of tree 


ele >> i  
left child >> 2i
right child >> 2i +1 


Parent index = [ i  /  2 ]
    

------------------------------------------------------------------------

Complete Binary Tree 

No left child be empty
